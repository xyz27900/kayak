import{_ as s,c as n,o as a,a as e}from"./app.3d6b22f6.js";const C=JSON.parse('{"title":"Docker Compose","description":"","frontmatter":{},"headers":[{"level":2,"title":"Local Testnet Node","slug":"local-testnet-node","link":"#local-testnet-node","children":[]},{"level":2,"title":"Environment variables","slug":"environment-variables","link":"#environment-variables","children":[]}],"relativePath":"guide/common/docker-compose.md"}'),l={name:"guide/common/docker-compose.md"},o=e(`<h1 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-hidden="true">#</a></h1><p>The <code>docker-compose.yaml</code> file that is being used for orchestration is located in the <code>.kayak</code> directory as well as the <code>Dockerfile</code> and by default looks like this:</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#7EE787;">version</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;3.9&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">services</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">display</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">image</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">kayak/display</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">container_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">display</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">environment</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">:0.0</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY_WIDTH</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">1280</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY_HEIGHT</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">720</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">ports</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">&quot;5800:5800&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">networks</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">kayak-network</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">ffmpeg</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">image</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">kayak/ffmpeg</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">container_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">ffmpeg</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">depends_on</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">display</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">restart</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">on-failure</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">environment</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">display:0.0</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY_WIDTH</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">1280</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY_HEIGHT</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">720</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">VIDEO_FILENAME</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">output.mp4</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">CR_DETECTOR_URL</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">application:5000</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">volumes</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">$KAYAK_VIDEOS_DIR:/videos</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">networks</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">kayak-network</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">anvil</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">image</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">kayak/anvil</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">container_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">anvil</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">environment</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">ANVIL_FORK_URL</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">https://rpc.ankr.com/eth_goerli</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">SEED_PHRASE</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">$SEED_PHRASE</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">CHAIN_ID</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">1337</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">networks</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">kayak-network</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">application</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">build</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">context</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">..</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">dockerfile</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">./.kayak/Dockerfile</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">container_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">kayak-application</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">depends_on</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">display</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">environment</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">DISPLAY</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">display:0.0</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">env_file</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">../.env</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">networks</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">      - </span><span style="color:#A5D6FF;">kayak-network</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">networks</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">kayak-network</span><span style="color:#C9D1D9;">:</span></span>
<span class="line"></span></code></pre></div><p>If you need more services for testing (for example, a backend or a database), you can add them here.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>During the modification, please keep in mind the following:</p><ol><li>The <code>CR_DETECTOR_URL</code> variable in the <code>ffmpeg</code> service should point to the container where the browser is running and the port should be <code>5000</code>. It is used to detect whether the browser is launched or not.</li><li>The <code>DISPLAY</code> variable should be the same across all services.</li><li>All containers should share the same network.</li></ol></div><h2 id="local-testnet-node" tabindex="-1">Local Testnet Node <a class="header-anchor" href="#local-testnet-node" aria-hidden="true">#</a></h2><p>As you might notice, there is a service called <code>anvil</code> in the <code>docker-compose.yaml</code> file. This is a local testnet node that uses <a href="https://book.getfoundry.sh/anvil/" target="_blank" rel="noreferrer">Anvil</a>.</p><p>You need to specify the <code>SEED_PHRASE</code> and <code>CHAIN_ID</code> variables — they are being passed to <code>--mnemonic</code> and <code>--chain-id</code> flags respectively.</p><h2 id="environment-variables" tabindex="-1">Environment variables <a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a></h2><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><code>DISPLAY</code></td><td>The display that is used for testing.</td></tr><tr><td><code>DISPLAY_WIDTH</code></td><td>The width of the display.</td></tr><tr><td><code>DISPLAY_HEIGHT</code></td><td>The height of the display.</td></tr><tr><td><code>VIDEO_FILENAME</code></td><td>The name of the video file that will be saved in the <code>videosDir</code> directory.</td></tr><tr><td><code>CR_DETECTOR_URL</code></td><td>The URL of the <code>chrome-detector</code>. It is running in the <code>application</code> container.</td></tr><tr><td><code>ANVIL_FORK_URL</code></td><td>The URL of the Ethereum network to be forked.</td></tr><tr><td><code>SEED_PHRASE</code></td><td>The seed phrase of the account that is used for testing. To use the test node account in Metamask, leave it as is.</td></tr><tr><td><code>CHAIN_ID</code></td><td>The ID of the network in your local node.</td></tr></tbody></table>`,10),p=[o];function t(c,r,D,i,y,d){return a(),n("div",null,p)}const h=s(l,[["render",t]]);export{C as __pageData,h as default};
