import{_ as e,c as t,b as s,w as c,a as l,r as a,o as r}from"./app.edfbb59b.js";const k=JSON.parse('{"title":"Tutorial","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. Create a new project","slug":"_1-create-a-new-project","link":"#_1-create-a-new-project","children":[]},{"level":2,"title":"2. Create example dApp","slug":"_2-create-example-dapp","link":"#_2-create-example-dapp","children":[]},{"level":2,"title":"3. Write the tests","slug":"_3-write-the-tests","link":"#_3-write-the-tests","children":[]},{"level":2,"title":"4. Run the tests","slug":"_4-run-the-tests","link":"#_4-run-the-tests","children":[]}],"relativePath":"guide/tutorial.md"}'),D={name:"guide/tutorial.md"},y=l(`<h1 id="tutorial" tabindex="-1">Tutorial <a class="header-anchor" href="#tutorial" aria-hidden="true">#</a></h1><p>In this article, we will create a simple dApp step-by-step and add some e2e tests using Kayak and Cypress.</p><h2 id="_1-create-a-new-project" tabindex="-1">1. Create a new project <a class="header-anchor" href="#_1-create-a-new-project" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;"># Go to the project directory</span></span>
<span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">/path/to/project</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># Initialize Kayak test runner</span></span>
<span class="line"><span style="color:#FFA657;">npx</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">kayak</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">init</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">--cypress</span></span>
<span class="line"></span></code></pre></div><p>Go through several steps in the initialization wizard:</p>`,5),i=l(`<p>Install added dependencies:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">npm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">install</span></span>
<span class="line"></span></code></pre></div><p>After that, have a look at the <code>package.json</code> file.</p><p>We can notice the script called <code>&quot;kayak&quot;</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;kayak&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;kayak test --cypress&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre></div><p>This is a main entrypoint for testing.</p><h2 id="_2-create-example-dapp" tabindex="-1">2. Create example dApp <a class="header-anchor" href="#_2-create-example-dapp" aria-hidden="true">#</a></h2><p>Now we’re going to create a simple dApp — it will be a page with three buttons:</p><ol><li>Connect a wallet</li><li>Sign a message</li><li>Send a transaction</li></ol><p>Create the <code>src</code> directory and put into it a file <code>index.html</code> with the following markup:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">src</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;https://bundle.run/buffer@6.0.3&quot;</span><span style="color:#C9D1D9;">&gt;&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;Test dApp&lt;/</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;connect-wallet-btn&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Connect a wallet</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;connected-account&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Account is not connected</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">hr</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;sign-message-btn&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">disabled</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Sign a message</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;signed-message&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Message is not signed</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">hr</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;send-transaction-btn&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">disabled</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Send a transaction</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">data-testid</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;sent-transaction&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    Transaction is not sent</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">/* Elements */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">connectWalletBtn</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connect-wallet-btn&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">connectedAccount</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connected-account&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">signMessageBtn</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;sign-message-btn&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">signedMessage</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;signed-message&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">sendTransactionBtn</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;send-transaction-btn&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">sentTransaction</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> document.</span><span style="color:#D2A8FF;">querySelector</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;sent-transaction&quot;]&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">/* Functions */</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">connectWallet</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">accounts</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> window.ethereum.</span><span style="color:#D2A8FF;">request</span><span style="color:#C9D1D9;">({ method: </span><span style="color:#A5D6FF;">&#39;eth_requestAccounts&#39;</span><span style="color:#C9D1D9;"> })</span></span>
<span class="line"><span style="color:#C9D1D9;">      connectedAccount.textContent </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> accounts[</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"><span style="color:#C9D1D9;">      signMessageBtn.disabled </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span></span>
<span class="line"><span style="color:#C9D1D9;">      sendTransactionBtn.disabled </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">false</span></span>
<span class="line"><span style="color:#C9D1D9;">      localStorage.</span><span style="color:#D2A8FF;">setItem</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;isConnected&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;true&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">signMessage</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">sign</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> window.ethereum.</span><span style="color:#D2A8FF;">request</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">        method: </span><span style="color:#A5D6FF;">&#39;personal_sign&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        params: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          </span><span style="color:#A5D6FF;">\`0x\${</span><span style="color:#C9D1D9;">buffer</span><span style="color:#A5D6FF;">.</span><span style="color:#C9D1D9;">Buffer</span><span style="color:#A5D6FF;">.</span><span style="color:#D2A8FF;">from</span><span style="color:#A5D6FF;">(</span><span style="color:#A5D6FF;">&#39;Hello world&#39;</span><span style="color:#A5D6FF;">, </span><span style="color:#A5D6FF;">&#39;utf8&#39;</span><span style="color:#A5D6FF;">).</span><span style="color:#D2A8FF;">toString</span><span style="color:#A5D6FF;">(</span><span style="color:#A5D6FF;">&#39;hex&#39;</span><span style="color:#A5D6FF;">)</span><span style="color:#A5D6FF;">}\`</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">          connectedAccount.textContent</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      })</span></span>
<span class="line"><span style="color:#C9D1D9;">      signedMessage.textContent </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> sign</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">sendTransaction</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">transaction</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> window.ethereum.</span><span style="color:#D2A8FF;">request</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">        method: </span><span style="color:#A5D6FF;">&#39;eth_sendTransaction&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        params: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            from: connectedAccount.textContent,</span></span>
<span class="line"><span style="color:#C9D1D9;">            to: </span><span style="color:#A5D6FF;">&#39;0x2f318C334780961FB129D2a6c30D0763d9a5C970&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            value: </span><span style="color:#A5D6FF;">&#39;0x0&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            gasLimit: </span><span style="color:#A5D6FF;">&#39;0x5028&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            maxFeePerGas: </span><span style="color:#A5D6FF;">&#39;0x2540be400&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            maxPriorityFeePerGas: </span><span style="color:#A5D6FF;">&#39;0x3b9aca00&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">          }</span></span>
<span class="line"><span style="color:#C9D1D9;">        ]</span></span>
<span class="line"><span style="color:#C9D1D9;">      })</span></span>
<span class="line"><span style="color:#C9D1D9;">      sentTransaction.textContent </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> transaction</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">/* Event listeners */</span></span>
<span class="line"><span style="color:#C9D1D9;">    connectWalletBtn.</span><span style="color:#D2A8FF;">addEventListener</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;click&#39;</span><span style="color:#C9D1D9;">, connectWallet)</span></span>
<span class="line"><span style="color:#C9D1D9;">    signMessageBtn.</span><span style="color:#D2A8FF;">addEventListener</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;click&#39;</span><span style="color:#C9D1D9;">, signMessage)</span></span>
<span class="line"><span style="color:#C9D1D9;">    sendTransactionBtn.</span><span style="color:#D2A8FF;">addEventListener</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;click&#39;</span><span style="color:#C9D1D9;">, sendTransaction)</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>After that we install the <a href="https://www.npmjs.com/package/serve" target="_blank" rel="noreferrer">serve package</a>:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">npm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">install</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">-D</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">serve</span></span>
<span class="line"></span></code></pre></div><p>And add a <code>serve</code> command to the <code>scripts</code> section in the <code>package.json</code> file:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;kayak&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;kayak test --cypress&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;serve&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;serve -p 3000 .&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre></div><p>It will launch a static server with our file on port <code>3000</code>.</p><h2 id="_3-write-the-tests" tabindex="-1">3. Write the tests <a class="header-anchor" href="#_3-write-the-tests" aria-hidden="true">#</a></h2><p>If we look at the content of the file called <code>kayak.config.ts</code>, we may notice the <code>testDir</code> property — it is a relative path to the directory containing your tests, so let&#39;s create this one.</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">mkdir</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">-p</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">cypress/tests</span></span>
<span class="line"></span></code></pre></div><p>Write our first Cypress test:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// cypress/tests/example.cy.ts</span></span>
<span class="line"><span style="color:#D2A8FF;">describe</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Example Test Suite&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">beforeEach</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">visit</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;http://localhost:3000&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Connect a wallet&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connect-wallet-btn&quot;]&#39;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">click</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">metamaskApproveConnection</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connected-account&quot;&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">      .</span><span style="color:#D2A8FF;">should</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;contain&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;0x&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Sign a message&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connect-wallet-btn&quot;]&#39;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">click</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;sign-message-btn&quot;]&#39;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">click</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">metamaskApproveSignature</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;signed-message&quot;&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">      .</span><span style="color:#D2A8FF;">should</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;contain&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;0x&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Send a transaction&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;connect-wallet-btn&quot;]&#39;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">click</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;send-transaction-btn&quot;]&#39;</span><span style="color:#C9D1D9;">).</span><span style="color:#D2A8FF;">click</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">metamaskApproveTransaction</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    cy.</span><span style="color:#D2A8FF;">get</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;[data-testid=&quot;sent-transaction&quot;&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">      .</span><span style="color:#D2A8FF;">should</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;contain&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;0x&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre></div><p>Now we&#39;re almost ready to go! But…</p><p>Metamask uses the Ethereum Mainnet network by default, and it&#39;s not the best idea to run the tests operating the real funds. Fortunately, Kayak is being shipped with <a href="https://book.getfoundry.sh/anvil/" target="_blank" rel="noreferrer">Anvil</a> — a local Ethereum testnet node, so all we need to do is to delete the current local testnet and replace it with Anvil&#39;s one.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Sign a message&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ...</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Add Anvil network&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  cy.</span><span style="color:#D2A8FF;">metamaskDeleteNetwork</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Localhost 8545&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  cy.</span><span style="color:#D2A8FF;">metamaskAddNetwork</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">    name: </span><span style="color:#A5D6FF;">&#39;Local Network&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    rpcUrl: </span><span style="color:#A5D6FF;">&#39;http://anvil:8545&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    chainId: </span><span style="color:#79C0FF;">1337</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    currencySymbol: </span><span style="color:#A5D6FF;">&#39;ETH&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">it</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Send a transaction&#39;</span><span style="color:#C9D1D9;">, () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ...</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre></div><p>Finally, our app is ready to be tested.</p><p>Let&#39;s have a look at the <code>Dockerfile</code> located in the <code>.kayak</code> directory.</p><p>You can notice that it has the <code>CMD</code> section:</p><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">CMD</span><span style="color:#C9D1D9;"> [</span><span style="color:#A5D6FF;">&quot;npm&quot;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&quot;run&quot;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&quot;test&quot;</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"></span></code></pre></div><p>This is a default command for running the tests — therefore, we should add this to our <code>package.json</code> file. The test script will run two scripts simultaneously — <code>serve</code> and <code>kayak</code>.</p><p>We will use the <a href="https://www.npmjs.com/package/start-server-and-test" target="_blank" rel="noreferrer">start-server-and-test package</a> to solve this task:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">npm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">install</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">-D</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">start-server-and-test</span></span>
<span class="line"></span></code></pre></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;kayak&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;kayak test --cypress&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;serve&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;serve -p 3000 .&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;test&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;start-server-and-test serve http://localhost:3000 kayak&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_4-run-the-tests" tabindex="-1">4. Run the tests <a class="header-anchor" href="#_4-run-the-tests" aria-hidden="true">#</a></h2><p>Everything is ready, so we can easily launch the tests:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">npm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">run</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">test</span></span>
<span class="line"></span></code></pre></div><p>This action will create and run several Docker containers, and we can observe the test execution process directly in a browser window just by opening <a href="http://127.0.0.1:5800/vnc.html?autoconnect=true" target="_blank" rel="noreferrer">http://127.0.0.1:5800/vnc.html?autoconnect=true</a>.</p><p>After the tests are finished, we can open the recorded video located in the <code>cypress/videos</code> directory to replay the execution process — it is useful for debugging.</p>`,37);function C(F,d,u,h,g,A){const n=a("docs-image"),p=a("docs-video"),o=a("docs-frame");return r(),t("div",null,[y,s(n,{src:"/images/tutorial/1-choose-language.png",alt:"Choose a language"}),s(n,{src:"/images/tutorial/2-determine-seed-phrase.png",alt:"Determine the seed phrase"}),s(n,{src:"/images/tutorial/3-determine-password.png",alt:"Determine the password"}),s(n,{src:"/images/tutorial/4-result.png",alt:"Result"}),i,s(o,null,{default:c(()=>[s(p,{src:"/videos/tutorial-test-output.mp4",type:"video/mp4"})]),_:1})])}const b=e(D,[["render",C]]);export{k as __pageData,b as default};
