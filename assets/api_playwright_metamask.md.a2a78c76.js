import{_ as a,c as e,o as s,a as t}from"./app.f5729140.js";const y=JSON.parse('{"title":"Playwright and Metamask","description":"","frontmatter":{},"headers":[{"level":2,"title":"general.disconnect","slug":"general-disconnect","link":"#general-disconnect","children":[{"level":3,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}]},{"level":2,"title":"connection.approve","slug":"connection-approve","link":"#connection-approve","children":[{"level":3,"title":"Usage","slug":"usage-1","link":"#usage-1","children":[]}]},{"level":2,"title":"connection.reject","slug":"connection-reject","link":"#connection-reject","children":[{"level":3,"title":"Usage","slug":"usage-2","link":"#usage-2","children":[]}]},{"level":2,"title":"transaction.approve","slug":"transaction-approve","link":"#transaction-approve","children":[{"level":3,"title":"Usage","slug":"usage-3","link":"#usage-3","children":[]}]},{"level":2,"title":"transaction.reject","slug":"transaction-reject","link":"#transaction-reject","children":[{"level":3,"title":"Usage","slug":"usage-4","link":"#usage-4","children":[]}]},{"level":2,"title":"signature.approve","slug":"signature-approve","link":"#signature-approve","children":[{"level":3,"title":"Usage","slug":"usage-5","link":"#usage-5","children":[]}]},{"level":2,"title":"signature.reject","slug":"signature-reject","link":"#signature-reject","children":[{"level":3,"title":"Usage","slug":"usage-6","link":"#usage-6","children":[]}]},{"level":2,"title":"network.add","slug":"network-add","link":"#network-add","children":[{"level":3,"title":"Usage","slug":"usage-7","link":"#usage-7","children":[]},{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]}]},{"level":2,"title":"network.delete","slug":"network-delete","link":"#network-delete","children":[{"level":3,"title":"Usage","slug":"usage-8","link":"#usage-8","children":[]},{"level":3,"title":"Parameters","slug":"parameters-2","link":"#parameters-2","children":[]}]},{"level":2,"title":"network.switch","slug":"network-switch","link":"#network-switch","children":[{"level":3,"title":"Usage","slug":"usage-9","link":"#usage-9","children":[]},{"level":3,"title":"Parameters","slug":"parameters-3","link":"#parameters-3","children":[]}]},{"level":2,"title":"network.getName","slug":"network-getname","link":"#network-getname","children":[{"level":3,"title":"Usage","slug":"usage-10","link":"#usage-10","children":[]},{"level":3,"title":"Returns","slug":"returns","link":"#returns","children":[]}]},{"level":2,"title":"network.toggleTestNetsVisibility","slug":"network-toggletestnetsvisibility","link":"#network-toggletestnetsvisibility","children":[{"level":3,"title":"Usage","slug":"usage-11","link":"#usage-11","children":[]},{"level":3,"title":"Parameters","slug":"parameters-4","link":"#parameters-4","children":[]}]},{"level":2,"title":"account.add","slug":"account-add","link":"#account-add","children":[{"level":3,"title":"Usage","slug":"usage-12","link":"#usage-12","children":[]},{"level":3,"title":"Parameters","slug":"parameters-5","link":"#parameters-5","children":[]}]},{"level":2,"title":"account.import","slug":"account-import","link":"#account-import","children":[{"level":3,"title":"Usage","slug":"usage-13","link":"#usage-13","children":[]},{"level":3,"title":"Parameters","slug":"parameters-6","link":"#parameters-6","children":[]}]},{"level":2,"title":"account.switch","slug":"account-switch","link":"#account-switch","children":[{"level":3,"title":"Usage","slug":"usage-14","link":"#usage-14","children":[]},{"level":3,"title":"Parameters","slug":"parameters-7","link":"#parameters-7","children":[]}]},{"level":2,"title":"account.getData","slug":"account-getdata","link":"#account-getdata","children":[{"level":3,"title":"Usage","slug":"usage-15","link":"#usage-15","children":[]},{"level":3,"title":"Returns","slug":"returns-1","link":"#returns-1","children":[]}]}],"relativePath":"api/playwright/metamask.md"}'),n={name:"api/playwright/metamask.md"},r=t(`<h1 id="playwright-and-metamask" tabindex="-1">Playwright and Metamask <a class="header-anchor" href="#playwright-and-metamask" aria-hidden="true">#</a></h1><p>The <code>@kayak/playwright</code> module provides an exported object <code>metamask</code> that contains a set of methods.</p><p>To use it, import it from the module:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { metamask } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@kayak/playwright&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="general-disconnect" tabindex="-1">general.disconnect <a class="header-anchor" href="#general-disconnect" aria-hidden="true">#</a></h2><p>Disconnects current account from the site.</p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.</span><span style="color:#D2A8FF;">disconnect</span><span style="color:#C9D1D9;">(window.location.origin);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>url</code></td><td><code>string</code></td><td>URL of the site to disconnect from.</td></tr></tbody></table><h2 id="connection-approve" tabindex="-1">connection.approve <a class="header-anchor" href="#connection-approve" aria-hidden="true">#</a></h2><p>Approves connection to the current site.</p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the connection request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.connection.</span><span style="color:#D2A8FF;">approve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="connection-reject" tabindex="-1">connection.reject <a class="header-anchor" href="#connection-reject" aria-hidden="true">#</a></h2><p>Rejects connection to the current site.</p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the connection request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.connection.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="transaction-approve" tabindex="-1">transaction.approve <a class="header-anchor" href="#transaction-approve" aria-hidden="true">#</a></h2><p>Approves current transaction request.</p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the transaction request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.transaction.</span><span style="color:#D2A8FF;">approve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="transaction-reject" tabindex="-1">transaction.reject <a class="header-anchor" href="#transaction-reject" aria-hidden="true">#</a></h2><p>Rejects current transaction request.</p><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the transaction request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.transaction.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="signature-approve" tabindex="-1">signature.approve <a class="header-anchor" href="#signature-approve" aria-hidden="true">#</a></h2><p>Approves current signature request.</p><h3 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the signature request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.signature.</span><span style="color:#D2A8FF;">approve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="signature-reject" tabindex="-1">signature.reject <a class="header-anchor" href="#signature-reject" aria-hidden="true">#</a></h2><p>Rejects current signature request.</p><h3 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#8B949E;">// Trigger the signature request</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.signature.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="network-add" tabindex="-1">network.add <a class="header-anchor" href="#network-add" aria-hidden="true">#</a></h2><p>Adds a new network to Metamask.</p><h3 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.network.</span><span style="color:#D2A8FF;">add</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">  name: </span><span style="color:#A5D6FF;">&#39;My Network&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  rpcUrl: </span><span style="color:#A5D6FF;">&#39;https://my.network/rpc&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  chainId: </span><span style="color:#79C0FF;">1234</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  currencySymbol: </span><span style="color:#A5D6FF;">&#39;MYTOKEN&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  blockExplorerUrl: </span><span style="color:#A5D6FF;">&#39;https://my.network/explorer&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>string</code></td><td>Name of the network.</td></tr><tr><td><code>rpcUrl</code></td><td><code>string</code></td><td>RPC URL of the network.</td></tr><tr><td><code>chainId</code></td><td><code>number</code></td><td>Chain ID of the network.</td></tr><tr><td><code>currencySymbol</code></td><td><code>string</code></td><td>Currency symbol of the network.</td></tr><tr><td><code>blockExplorerUrl</code></td><td><code>string (Optional)</code></td><td>Block explorer URL of the network.</td></tr></tbody></table><h2 id="network-delete" tabindex="-1">network.delete <a class="header-anchor" href="#network-delete" aria-hidden="true">#</a></h2><p>Deletes a network by a given name from Metamask.</p><h3 id="usage-8" tabindex="-1">Usage <a class="header-anchor" href="#usage-8" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.network.</span><span style="color:#D2A8FF;">delete</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;My Network&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>networkName</code></td><td><code>string</code></td><td>Name of the network to delete.</td></tr></tbody></table><h2 id="network-switch" tabindex="-1">network.switch <a class="header-anchor" href="#network-switch" aria-hidden="true">#</a></h2><p>Switches to the network with the given name.</p><h3 id="usage-9" tabindex="-1">Usage <a class="header-anchor" href="#usage-9" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.network.</span><span style="color:#D2A8FF;">switch</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;My Network&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>networkName</code></td><td><code>string</code></td><td>Name of the network to switch to.</td></tr></tbody></table><h2 id="network-getname" tabindex="-1">network.getName <a class="header-anchor" href="#network-getname" aria-hidden="true">#</a></h2><p>Gets the name of the current network.</p><h3 id="usage-10" tabindex="-1">Usage <a class="header-anchor" href="#usage-10" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">networkName</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.network.</span><span style="color:#D2A8FF;">getName</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span></code></pre></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h3><p><code>string</code> - Name of the current network.</p><h2 id="network-toggletestnetsvisibility" tabindex="-1">network.toggleTestNetsVisibility <a class="header-anchor" href="#network-toggletestnetsvisibility" aria-hidden="true">#</a></h2><p>Toggles the visibility of the test networks.</p><h3 id="usage-11" tabindex="-1">Usage <a class="header-anchor" href="#usage-11" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.network.</span><span style="color:#D2A8FF;">toggleTestNetsVisibility</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>show</code></td><td><code>boolean</code></td><td>Whether to show or hide test nets</td></tr></tbody></table><h2 id="account-add" tabindex="-1">account.add <a class="header-anchor" href="#account-add" aria-hidden="true">#</a></h2><p>Adds a new account to Metamask.</p><h3 id="usage-12" tabindex="-1">Usage <a class="header-anchor" href="#usage-12" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.account.</span><span style="color:#D2A8FF;">add</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;My Account&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>accountName</code></td><td><code>string</code></td><td>Name of the account to add.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>After adding an account, Metamask is automatically switched to the new account. To get new account data, you need to call <a href="#account-getdata"><code>metamask.account.getData</code></a>.</p></div><h2 id="account-import" tabindex="-1">account.import <a class="header-anchor" href="#account-import" aria-hidden="true">#</a></h2><p>Imports an account to Metamask.</p><h3 id="usage-13" tabindex="-1">Usage <a class="header-anchor" href="#usage-13" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">privateKey</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef&#39;</span></span>
<span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.account.</span><span style="color:#D2A8FF;">import</span><span style="color:#C9D1D9;">(privateKey);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>privateKey</code></td><td><code>string</code></td><td>Private key of the account to import.</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>After importing an account, Metamask is automatically switched to the new account. To get new account data, you need to call <a href="#account-getdata"><code>metamask.account.getData</code></a>.</p></div><h2 id="account-switch" tabindex="-1">account.switch <a class="header-anchor" href="#account-switch" aria-hidden="true">#</a></h2><p>Switches to the account with the given name.</p><h3 id="usage-14" tabindex="-1">Usage <a class="header-anchor" href="#usage-14" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.account.</span><span style="color:#D2A8FF;">switch</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;My Account&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>accountName</code></td><td><code>string</code></td><td>Name of the account to switch to.</td></tr></tbody></table><h2 id="account-getdata" tabindex="-1">account.getData <a class="header-anchor" href="#account-getdata" aria-hidden="true">#</a></h2><p>Gets the data of the current account.</p><h3 id="usage-15" tabindex="-1">Usage <a class="header-anchor" href="#usage-15" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">accountData</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.account.</span><span style="color:#D2A8FF;">getData</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">expect</span><span style="color:#C9D1D9;">(accountData).</span><span style="color:#D2A8FF;">toEqual</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">  expect.</span><span style="color:#D2A8FF;">objectContaining</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">    accountName: </span><span style="color:#A5D6FF;">&#39;My Account&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    accountAddress: </span><span style="color:#A5D6FF;">&#39;0xE3fA35a171e37B5dA59cDFF60F2ccD17F0f3E8b5&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">  })</span></span>
<span class="line"><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h3><p>Object with properties <code>accountName</code> and <code>accountAddress</code> if the action was successful, <code>null</code> otherwise.</p>`,90),l=[r];function o(c,i,p,d,h,u){return s(),e("div",null,l)}const D=a(n,[["render",o]]);export{y as __pageData,D as default};
