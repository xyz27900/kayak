import{_ as s,c as a,o as n,a as l}from"./app.edfbb59b.js";const C=JSON.parse('{"title":"Playwright Plugin","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"relativePath":"guide/plugin/playwright.md"}'),o={name:"guide/plugin/playwright.md"},p=l(`<h1 id="playwright-plugin" tabindex="-1">Playwright Plugin <a class="header-anchor" href="#playwright-plugin" aria-hidden="true">#</a></h1><p>If you don&#39;t want to use <strong>Kayak</strong> as an all-in-one solution, you can integrate it as a plugin for your existing <strong>Playwright</strong> setup.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FFA657;">npm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">install</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">-D</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">@kayak/playwright</span></span>
<span class="line"></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>There are some limitations to use <strong>Playwright</strong> with <strong>Kayak</strong>:</p><ol><li>You must use <code>chrome</code> or <code>chromium</code> browsers.</li><li>You must use <code>headed</code> mode.</li></ol><p>Therefore, the configuration will look like this:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-ELWX5" id="tab-NGcEQIv" checked="checked"><label for="tab-NGcEQIv">playwright.config.js</label><input type="radio" name="group-ELWX5" id="tab-t7xDieJ"><label for="tab-t7xDieJ">playwright.config.ts</label></div><div class="blocks"><div class="language-javascript active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  use: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    headless: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    channel: </span><span style="color:#A5D6FF;">&#39;chrome&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// or &#39;chromium&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">    browserName: </span><span style="color:#A5D6FF;">&#39;chromium&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... rest of the configuration</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { PlaywrightTestConfig } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@playwright/test&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">config</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">PlaywrightTestConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  workers: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  use: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    headless: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    channel: </span><span style="color:#A5D6FF;">&#39;chrome&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#8B949E;">// or &#39;chromium&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">    browserName: </span><span style="color:#A5D6FF;">&#39;chromium&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... rest of the configuration</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>After the configuration is done, just use <code>test</code> from <code>@kayak/playwright</code> in your tests.</p><p>Here is an example of such a test:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-Fb5R7" id="tab-0EB3UIF" checked="checked"><label for="tab-0EB3UIF">example.spec.js</label><input type="radio" name="group-Fb5R7" id="tab-LAl8kkS"><label for="tab-LAl8kkS">example.spec.ts</label></div><div class="blocks"><div class="language-javascript active"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> { </span><span style="color:#79C0FF;">test</span><span style="color:#C9D1D9;"> } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;@playwright/test&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> { </span><span style="color:#FFA657;">test</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">kayakTest</span><span style="color:#C9D1D9;"> } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;@kayak/playwright&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">test</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Test without Metamask&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> ({ </span><span style="color:#FFA657;">page</span><span style="color:#C9D1D9;"> }) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> page.</span><span style="color:#D2A8FF;">goto</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;https://example.com&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... other actions</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">kayakTest</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Test with Metamask&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> ({ </span><span style="color:#FFA657;">page</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">metamask</span><span style="color:#C9D1D9;"> }) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> page.</span><span style="color:#D2A8FF;">goto</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;https://example.com&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.</span><span style="color:#D2A8FF;">addAccount</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;test account&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... other actions</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { test } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@playwright/test&#39;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { test </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> kayakTest } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@kayak/playwright&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">test</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Test without Metamask&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> ({ </span><span style="color:#FFA657;">page</span><span style="color:#C9D1D9;"> }) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> page.</span><span style="color:#D2A8FF;">goto</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;https://example.com&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... other actions</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D2A8FF;">kayakTest</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Test with Metamask&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> ({ </span><span style="color:#FFA657;">page</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">metamask</span><span style="color:#C9D1D9;"> }) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> page.</span><span style="color:#D2A8FF;">goto</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;https://example.com&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> metamask.</span><span style="color:#D2A8FF;">addAccount</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;test account&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ... other actions</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre></div></div></div><p>Also, you need to set the following environment variables:</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>TMP_DIR</code></td><td>Path to the temporary directory where <strong>Metamask</strong> extension will be downloaded.</td></tr><tr><td><code>SEED_PHRASE</code></td><td>Seed phrase for <strong>Metamask</strong>.</td></tr><tr><td><code>PASSWORD</code></td><td>Password for <strong>Metamask</strong>.</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Please note that it is not enough to put these variables in the <code>.env</code> file in the root of your project. You need to set them in the environment where <strong>Playwright</strong> is executing.</p><p>For example, you can use the <a href="https://www.npmjs.com/package/env-cmd" target="_blank" rel="noreferrer">env-cmd</a> package.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2n35b" id="tab-lMfMOte" checked="checked"><label for="tab-lMfMOte">package.json</label></div><div class="blocks"><div class="language-json active"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;test:e2e&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;env-cmd -f .env playwright test&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre></div></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can have a look at the <a href="https://github.com/xyz27900/kayak/tree/main/examples/playwright-plugin" target="_blank" rel="noreferrer">example project</a> to see how it works.</p></div>`,17),e=[p];function t(c,r,i,y,D,d){return n(),a("div",null,e)}const h=s(o,[["render",t]]);export{C as __pageData,h as default};
