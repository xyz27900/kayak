name: "Integration testing"

on:
  workflow_call:
    inputs:
      pnpm-version:
        description: "pnpm version"
        required: true
        type: number
      image-tag:
        description: "Docker image tag"
        required: true
        type: string

jobs:
  test:
    name: "Integration testing"
    runs-on: ubuntu-latest

    services:
      verdaccio:
        image: verdaccio/verdaccio:5
        ports:
          - 4873:4873

    strategy:
      matrix:
        node-version: [ 18, 19 ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup pnpm"
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}

      - name: "Download workspace from storage"
        uses: actions/download-artifact@v3
        with:
          name: workspace-${{ matrix.node-version }}
          path: /tmp

      - name: "Decompress workspace files"
        run: |
          tar -xzf /tmp/workspace.tar.gz -C . --overwrite

      - name: "Install expect"
        run: |
          sudo apt install -y expect

      - name: "Create NPM user"
        run: |
          expect <<EOF
          set timeout 5
          spawn pnpm adduser --registry http://localhost:4873
          expect "Username:"
          send "$NPM_USERNAME\r"
          expect "Password:"
          send "$NPM_PASSWORD\r"
          expect "Email:"
          send "$NPM_EMAIL\r"
          expect eof
          EOF
        env:
          NPM_USERNAME: test
          NPM_PASSWORD: test
          NPM_EMAIL: test@example.com

      - name: "Publish packages to Verdaccio"
        uses: ./.github/actions/execute-for-paths
        with:
          paths: |
            packages/cli
            packages/core
            packages/cypress
            packages/metamask
            packages/playwright
          run: |
            pnpm publish --registry http://localhost:4873

      - name: "Setup Docker"
        uses: ./.github/actions/setup-docker
        with:
          platforms: arm,arm64,ppc64le,mips64,s390x

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Pull Docker images"
        run: |
          docker pull ghcr.io/${{ github.repository }}/anvil:${{ inputs.image-tag }}
          docker pull ghcr.io/${{ github.repository }}/chromium:${{ inputs.image-tag }}
          docker pull ghcr.io/${{ github.repository }}/display:${{ inputs.image-tag }}
          docker pull ghcr.io/${{ github.repository }}/ffmpeg:${{ inputs.image-tag }}

      - name: "Change Docker images tags"
        run: |
          docker tag ghcr.io/${{ github.repository }}/anvil:${{ inputs.image-tag }} ${{ github.event.repository.name }}/anvil:${{ inputs.image-tag }}
          docker tag ghcr.io/${{ github.repository }}/chromium:${{ inputs.image-tag }} ${{ github.event.repository.name }}/chromium:${{ inputs.image-tag }}
          docker tag ghcr.io/${{ github.repository }}/display:${{ inputs.image-tag }} ${{ github.event.repository.name }}/display:${{ inputs.image-tag }}
          docker tag ghcr.io/${{ github.repository }}/ffmpeg:${{ inputs.image-tag }} ${{ github.event.repository.name }}/ffmpeg:${{ inputs.image-tag }}

      - name: "Initialise Kayak"
        working-directory: ./examples/playwright
        run: |
          npx kayak init --playwright --typescript
        env:
          KAYAK_DEBUG: true
          SEED_PHRASE: "test test test test test test test test test test test junk"
          PASSWORD: "test-test"

      - name: "Run tests"
        working-directory: ./examples/playwright
        run: |
          ls -la
          pnpm test
        env:
          KAYAK_DEBUG: true
