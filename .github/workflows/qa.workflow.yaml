name: "Quality Assurance"

env:
  PNPM_VERSION: 8

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-workspace:
    name: "üõ†Ô∏è‚ÄÇBuild workspace"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 19]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup pnpm"
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ env.PNPM_VERSION }}
          cache: true

      - name: "Install dependencies"
        run: pnpm install --frozen-lockfile

      - name: "Build packages/core"
        working-directory: packages/core
        run: |
          pnpm build

      - name: "Build packages/metamask"
        working-directory: packages/metamask
        run: |
          pnpm build

      - name: "Build packages/cypress"
        working-directory: packages/cypress
        run: |
          pnpm build

      - name: "Build packages/playwright"
        working-directory: packages/playwright
        run: |
          pnpm build

      - name: "Build packages/cli"
        working-directory: packages/cli
        run: |
          pnpm build

      - name: "Copy workspace files to /tmp/workspace"
        run: |
          mkdir -p /tmp/workspace
          cp -r ./packages /tmp/workspace/packages
          find . -name 'node_modules' -not -path './node_modules/*' -type d -prune -exec sh -c 'mkdir -p /tmp/workspace/${0#./}; cp -rT "$0" /tmp/workspace/${0#./}' {} \;

      - name: "Compress workspace files"
        run: |
          tar -czf workspace-${{ matrix.node-version }}.tar.gz -C /tmp/workspace .

      - name: "Upload workspace artifact"
        uses: actions/upload-artifact@v3
        with:
          name: workspace-${{ matrix.node-version }}
          path: workspace-${{ matrix.node-version }}.tar.gz

  lint:
    name: "üëÄ‚ÄÇLint"
    runs-on: ubuntu-latest
    needs:
      - build-workspace
    env:
      PATHS: |
        scripts
        docs
        packages/cli
        packages/core
        packages/cypress
        packages/metamask
        packages/playwright
        examples/cypress
        examples/cypress-plugin
        examples/playwright
        examples/playwright-plugin

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup pnpm"
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: 18
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: "Download workspace artifact"
        uses: actions/download-artifact@v3
        with:
          name: workspace-${{ inputs.node-version }}
          path: /tmp

      - name: "Decompress workspace files"
        run: |
          tar -xzf /tmp/workspace-${{ matrix.node-version }}.tar.gz -C . --overwrite

      - name: "Loop through paths"
        run: |
          initial_path=$(pwd)
          for path in ${{ env.PATHS }}
          do
            echo "Linting $path"
            cd "$path"
            echo "$(pwd)"
            cd "$initial_path"
          done

      - name: "Lint Scripts"
        working-directory: scripts
        run: |
          pnpm lint

      - name: "Lint Docs"
        working-directory: docs
        run: |
          pnpm lint

      - name: "Lint packages/cli"
        working-directory: packages/cli
        run: |
          pnpm lint

      - name: "Lint packages/core"
        working-directory: packages/core
        run: |
          pnpm lint

      - name: "Lint packages/cypress"
        working-directory: packages/cypress
        run: |
          pnpm lint

      - name: "Lint packages/metamask"
        working-directory: packages/metamask
        run: |
          pnpm lint

      - name: "Lint packages/playwright"
        working-directory: packages/playwright
        run: |
          pnpm lint

      - name: "Lint examples/cypress"
        working-directory: examples/cypress
        run: |
          pnpm lint

      - name: "Lint examples/cypress-plugin"
        working-directory: examples/cypress-plugin
        run: |
          pnpm lint

      - name: "Lint examples/playwright"
        working-directory: examples/playwright
        run: |
          pnpm lint

      - name: "Lint examples/playwright-plugin"
        working-directory: examples/playwright-plugin
        run: |
          pnpm lint

  test:
    name: "üß™‚ÄÇTest"
    runs-on: ubuntu-latest
    needs:
      - build-workspace
    strategy:
      matrix:
        node-version: [18, 19]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup pnpm"
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: "Download workspace artifact"
        uses: actions/download-artifact@v3
        with:
          name: workspace-${{ matrix.node-version }}
          path: /tmp

      - name: "Decompress workspace files"
        run: |
          tar -xzf /tmp/workspace-${{ matrix.node-version }}.tar.gz -C . --overwrite

      - name: "Test packages/cli"
        working-directory: packages/cli
        run: |
          pnpm test

  cleanup:
    name: "üßπ‚ÄÇCleanup"
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    if: always()

    steps:
      - name: "Delete artifacts"
        uses: geekyeggo/delete-artifact@v2
        with:
          name: workspace-*
