name: "Quality Assurance"

env:
  PNPM_VERSION: 8

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-workspace:
    name: "üõ†Ô∏è‚ÄÇBuild workspace"
    uses: ./.github/workflows/qa.workspace.workflow.yaml

    strategy:
      matrix:
        node-version: [18, 19]

    with:
      node-version: ${{ matrix.node-version }}
      pnpm-version: 8

  # ------ ****** ------ #

  lint:
    name: "üëÄ‚ÄÇLint"
    uses: ./.github/workflows/qa.lint.workflow.yaml

    strategy:
      matrix:
        node-version: [18, 19]

    with:
      node-version: ${{ matrix.node-version }}
      pnpm-version: 8
      paths: |
        scripts
        docs
        packages/cli
        packages/core
        packages/cypress
        packages/metamask
        packages/playwright

    needs:
      - build-workspace

  # ------ ****** ------ #

  test:
    name: "üß™‚ÄÇTest"
    runs-on: ubuntu-latest
    needs:
      - build-workspace
    strategy:
      matrix:
        node-version: [18, 19]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup pnpm"
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      - name: "Download workspace artifact"
        uses: actions/download-artifact@v3
        with:
          name: workspace-${{ matrix.node-version }}
          path: /tmp

      - name: "Decompress workspace files"
        run: |
          tar -xzf /tmp/workspace-${{ matrix.node-version }}.tar.gz -C . --overwrite

      - name: "Test packages/cli"
        working-directory: packages/cli
        run: |
          pnpm test

  cleanup:
    name: "üßπ‚ÄÇCleanup"
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    if: always()

    steps:
      - name: "Delete artifacts"
        uses: geekyeggo/delete-artifact@v2
        with:
          name: workspace-*
