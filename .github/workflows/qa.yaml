name: "Quality Assurance"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-workspace:
    name: "üõ†Ô∏è‚ÄÉBuild workspace Docker image"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Build workspace Docker image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          tags: kayak/workspace:latest
          cache-from: type=gha,mode=max,scope=kayak/workspace
          cache-to: type=gha,mode=max,scope=kayak/workspace
          outputs: type=docker,dest=/tmp/kayak-workspace.tar

      - name: "Upload workspace Docker image"
        uses: actions/upload-artifact@v3
        with:
          name: kayak-workspace
          path: /tmp/kayak-workspace.tar

  lint:
    name: "üëÄ‚ÄÉLint"
    runs-on: ubuntu-latest
    needs: build-workspace

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Download workspace Docker image"
        uses: actions/download-artifact@v3
        with:
          name: kayak-workspace
          path: /tmp

      - name: "Load workspace Docker image"
        run: |
          docker load --input /tmp/kayak-workspace.tar

      - name: "Lint Scripts"
        run: |
          docker run --rm kayak/workspace:latest sh -c "cd scripts && pnpm lint

      - name: "Lint Docs"
        run: |
          docker run --rm kayak/workspace:latest sh -c "cd docs && pnpm lint"

      - name: "Lint packages/cli"
        run: |
          docker run --rm --workdir /app/packages/cli kayak/workspace:latest pnpm lint

      - name: "Lint packages/core"
        run: |
          docker run --rm --workdir /app/packages/core kayak/workspace:latest pnpm lint

      - name: "Lint packages/cypress"
        run: |
          docker run --rm --workdir /app/packages/cypress kayak/workspace:latest pnpm lint

      - name: "Lint packages/metamask"
        run: |
          docker run --rm --workdir /app/packages/metamask kayak/workspace:latest pnpm lint

      - name: "Lint packages/playwright"
        run: |
          docker run --rm --workdir /app/packages/playwright kayak/workspace:latest pnpm lint

      - name: "Lint examples/cypress"
        run: |
          docker run --rm --workdir /app/examples/cypress kayak/workspace:latest pnpm lint

      - name: "Lint examples/cypress-plugin"
        run: |
          docker run --rm --workdir /app/examples/cypress-plugin kayak/workspace:latest pnpm lint

      - name: "Lint examples/playwright"
        run: |
          docker run --rm --workdir /app/examples/playwright kayak/workspace:latest pnpm lint

      - name: "Lint examples/playwright-plugin"
        run: |
          docker run --rm --workdir /app/examples/playwright-plugin kayak/workspace:latest pnpm lint

  test:
    name: "üß™‚ÄÉTest"
    runs-on: ubuntu-latest
    needs: build-workspace

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Download workspace Docker image"
        uses: actions/download-artifact@v3
        with:
          name: kayak-workspace
          path: /tmp

      - name: "Load workspace Docker image"
        run: |
          docker load --input /tmp/kayak-workspace.tar

      - name: "Test packages/cli"
        run: |
          docker run --rm --workdir /app/packages/cli kayak/workspace:latest pnpm test

  cleanup:
    name: "üßπ‚ÄÉCleanup"
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    if: always()

    steps:
      - name: "Delete artifacts"
        uses: geekyeggo/delete-artifact@v2
        with:
          name: kayak-workspace
